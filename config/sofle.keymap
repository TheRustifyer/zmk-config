/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/led/led.h>

#include "spanish_layout.h"


&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN
                        LED_COLOR_ID_RED
                        LED_COLOR_ID_BLUE>;
    };
};

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

#define K_GOLD  RGB_COLOR_HSB(255,215,0)
#define K_WHITE RGB_COLOR_HSB(255,255,255)
#define K_BLUE  RGB_COLOR_HSB(0,0,255)

#define OUT_T    &out OUT_TOG
#define EXTPWR_T &ext_power EP_TOG

#define RGB_T   &rgb_ug RGB_TOG
#define LED_EFF &rgb_ug RGB_EFF
#define LED_EFR &rgb_ug RGB_EFR

// The caps word behavior behaves similar to a caps lock,
// but will automatically deactivate when any key not in a continue list is pressed,
// or if the caps word key is pressed again
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
    mods = <(MOD_LSFT | MOD_LALT)>;
};

/ {
    chosen {
		zmk,underglow = &led_strip;
	};

    // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    behaviors {
        rot_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
        
        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "text/write";
// ------------------------------------------------------------------------------------------------------------
// | ESC  |  1  |  2    |  3   |  4   |  5    |                  |  6    |  7   |  8   |  9    |   0   |   '   |
// | TAB  |  Q  |  W    |  E   |  R   |  T    |                  |  Y    |  U   |  I   |  O    |   P   | BKSPC |
// | S/C  |  A  |  S    |  D   |  F   |  G    |                  |  H    |  J   |  K   |  L    |   ´   | ENTER |
// | CTRL |  Z  |  X    |  C   |  V   |  B    | MUTE  |  | ESC   |  N    |  M   |  ,   |  .    |   -   | SHIFT |
//              | LCTRL | LGUI | LALT | LOWER | SPACE |  | SPACE | RAISE | RALT | RGUI | RCTRL |

            bindings = <
&kp ESC          &kp N1 &kp N2    &kp N3    &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8       &kp N9      &kp N0        &kp ES_QUOT
&kp TAB          &kp Q  &kp W     &kp E     &kp R     &kp T                            &kp Y  &kp U     &kp I        &kp O       &kp P         &kp BSPC
&mt LSHIFT CLCK  &kp A  &kp S     &kp D     &kp F     &kp G                            &kp H  &kp J     &kp K        &kp L       &kp ES_ACUT   &kp RET
&kp LCTRL        &kp Z  &kp X     &kp C     &kp V     &kp B      &kp C_MUTE &kp ESC    &kp N  &kp M     &kp ES_COMM  &kp ES_DOT  &kp ES_MINS  &kp RSHFT
                        &kp LCTRL &kp LGUI  &kp LALT  &mo LOWER  &kp SPACE  &kp SPACE  &mo RAISE  &kp RALT &kp RGUI  &kp RCTRL
            >;

            sensor-bindings = <&rot_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            display-name = "sp/numpad";
// ------------------------------------------------------------------------------------------------------------
// | ESC   |      |       |       |       |      |                       |      |  7    |  8    |  9   |   -   |       |                   
// | TAB   | INS  | PSCR  | GUI   |       |      |                       |      |  4    |  5    |  6   |   *   |       |                     
// | CAPS  | ALT  | CTRL  | SHIFT |       |      |                       |      |  1    |  2    |  3   |   +   |       |                     
// | LCTRL | UNDO | CUT   | COPY  | PASTE |      |      |        |       |      |  0    |  .    |  ,   |   \   |   =   |                     
//                | LCTRL | LGUI  | LALT  |      |      |        |       |      |       |       |      |                                     
            bindings = <
&kp ESC    &trans       &trans       &trans       &trans       &trans                    &trans     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS    &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                    &trans     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_ASTERISK &trans
&kp CLCK   &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &trans                    &trans     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_PLUS     &trans
&kp LCTRL  &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans    &trans  &trans  &trans     &kp KP_NUMBER_0  &kp DOT          &kp KP_COMMA     &kp KP_SLASH    &kp ES_IEXL
                        &kp LCTRL    &kp LGUI     &kp LALT     &trans    &trans  &trans  &trans     &trans           &trans           &trans                                  
            >;

            sensor-bindings = <&rot_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            display-name = "symb/fns";

// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |  F1   | F2  |  F3 |  F4  |  F5  |  F6  |                       |  F7  |  F8  |  F9   |  F10  |  F11  | F12   |
// |       |     |     |      |      |      |                       |   |  |  [   |   ]   | HOME  |       | END   |
// |       |     |     |      |      |      |                       |   ~  |  {   |   }   | PGUP  |   ^   | PGDN  |
// |       |     |     |      |      |      |        |      |       |   ñ  |  <   |   >   |  <-   |   v   |   ->  |
//               |     |      |      |      |        |      |       |      |      |       | KMENU |                 

            bindings = <
&kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6                         &kp F7       &kp F8       &kp F9      &kp F10   &kp F11   &kp F12     
&trans       &trans       &trans       &trans       &trans       &trans                         &kp PIPE     &kp ES_LBRC  &kp ES_RBRC &kp HOME  &trans    &kp END        
&trans       &trans       &trans       &trans       &trans       &trans                         &kp ES_TILD  &kp ES_LCBR  &kp ES_RCBR &kp PG_UP &kp UP    &kp PG_DN          
&trans       &trans       &trans       &trans       &trans       &trans       &trans    &trans  &kp ES_NTIL  &kp ES_LABK  &kp ES_RABK &kp LEFT  &kp DOWN  &kp RIGHT              
                          &trans       &trans       &trans       &trans       &trans    &trans  &trans       &trans       &trans      &kp K_MENU            
            >;
        };

        adjust_layer {
            display-name = "config";
// ----------------------------------------------------------------------------------------------------------------------------
// | LY0    | LY1      | LY2      |  LY3     | LY4      | LY5      |                      | LY0     | LY1     |  LY2    |  LY3    |  LY4       |  LY5       |
// | BT_PRV | BT_SEL 1 | BT_SEL 2 | BT_SEL 3 | BT_SEL 4 | BT_SEL 5 |                      |         |         |         |         |            | SYS_RESET  |
// | BT_NXT |          |          |          |          |          |                      | RGB_BRI | RGB_HUI | RGB_SAI | RGB_SPI | EXTPWR_TOG | BOOTLOADER |
// | BT_CLR |          | BRI_MAX  | BRI_UP   | VOL_UP   |          |   MUTE  |  | RGB_TOG | RGB_BRD | RGB_HUD | RGB_SAD | RGB_SPD | OUTPUT_TOG | ZMK_STUDIO |
//                     | BRI_MIN  | BRI_DN   | VOL_DN   |          | RGB_EFD |  | RGB_EFF |         | K_BLUE  | K_GOLD  | K_WHITE |

            bindings = <
&to BASE    &to LOWER    &to RAISE     &to ADJUST   &trans        &trans                              &to BASE        &to LOWER       &to RAISE       &to ADJUST      &trans   &trans
&bt BT_PRV  &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4                        &none           &none           &none           &none           &none    &sys_reset
&bt BT_NXT  &none        &none         &none        &none         &none                               &rgb_ug RGB_BRI &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI EXTPWR_T &bootloader
&bt BT_CLR  &none        &kp C_BRI_MAX &kp C_BRI_UP &kp C_VOL_UP  &none        &kp C_MUTE   RGB_T    &rgb_ug RGB_BRD &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD OUT_T    &studio_unlock 
                         &kp C_BRI_MIN &kp C_BRI_DN &kp C_VOL_DN  &none        LED_EFR      LED_EFF  &none           &rgb_ug K_BLUE  &rgb_ug K_GOLD  &rgb_ug K_WHITE
            >;

            sensor-bindings = <&rgb_encoder>;
        };

    };
};
