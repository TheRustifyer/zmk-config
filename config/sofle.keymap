/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/led/led.h>


&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN
                        LED_COLOR_ID_RED
                        LED_COLOR_ID_BLUE>;
    };
};

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

#define K_GOLD  RGB_COLOR_HSB(255,215,0)
#define K_WHITE RGB_COLOR_HSB(255,255,255)
#define K_BLUE  RGB_COLOR_HSB(0,0,255)

#define EXTPWR_T &ext_power EP_TOG

#define LED_EFF &rgb_ug RGB_EFF
#define LED_EFR &rgb_ug RGB_EFR

// The caps word behavior behaves similar to a caps lock,
// but will automatically deactivate when any key not in a continue list is pressed,
// or if the caps word key is pressed again
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
    mods = <(MOD_LSFT | MOD_LALT)>;
};

/ {
    chosen {
		zmk,underglow = &led_strip;
	};

    // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    behaviors {
        rot_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "base layer";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   '   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
// |  CAPS |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   `   | ENTER |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | ESC   |  N   |  M    |  ,    |  .   |   -   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  SPACE |  | ENTER | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp ESC     &kp N1 &kp N2   &kp N3   &kp N4    &kp N5                           &kp N6 &kp N7    &kp N8    &kp N9   &kp N0    &kp SQT
&kp TAB     &kp Q  &kp W    &kp E    &kp R     &kp T                            &kp Y  &kp U     &kp I     &kp O    &kp P     &kp BSPC
&kp CLCK    &kp A  &kp S    &kp D    &kp F     &kp G                            &kp H  &kp J     &kp K     &kp L    &kp GRAVE &kp RET
&kp LSHIFT  &kp Z  &kp X    &kp C    &kp V     &kp B    &kp C_MUTE   &kp ESC    &kp N  &kp M     &kp COMMA &kp DOT  &kp MINUS &kp RSHFT
                &kp LGUI &kp LALT &kp LCTRL &tog LOWER  &kp SPACE    &kp RET    &tog RAISE  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            display-name = "lower";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |   |   |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
// |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  (    |  )   |   *   |   |   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   /   |   \   |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp PIPE    &kp F1    &kp F2    &kp F3      &kp F4    &kp F5                  &kp F6    &kp F7   &kp F8    &kp F9    &kp F10   &kp F11
&kp GRAVE &kp N1    &kp N2    &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8    &kp N9    &kp N0    &kp F12
&trans    &kp EXCL  &kp AT    &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp LPAR  &kp RPAR  &kp ASTRK &kp PIPE
&trans    &kp EQUAL &kp MINUS &kp PLUS &kp LBRC  &kp RBRC   &trans &trans     &kp LBKT  &kp RBKT &kp SEMI  &kp COLON &kp FSLH  &kp BSLH
                 &trans    &trans      &trans    &trans     &trans &trans     &trans    &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            display-name = "raise";
// ------------------------------------------------------------------------------------------------------------
// | BTCLR      | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | LY0  | LY1  |  LY2  |  LY3 |  LY4  |  LY5  |
// |            | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
// |            | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
// |            | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
//                     |      |       |       |      |      |  |      | LY0  |      |       |      |
            bindings = <
&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                     &to BASE  &to LOWER  &to RAISE  &to ADJUST &trans  &trans
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans                           &kp PG_UP  &trans      &kp UP      &trans      &kp N0  &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK                         &kp PG_DN  &kp LEFT    &kp DOWN    &kp RIGHT   &kp DEL &kp BSPC
&none      &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &trans        &trans  &trans     &trans     &trans      &trans      &trans      &trans  &trans
                        &trans       &trans       &trans       &trans        &trans  &tog BASE  &trans     &trans      &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            display-name = "config";
// ----------------------------------------------------------------------------------------------------------------------------
// | LY0    | LY1       | LY2         |  LY3       | LY4        | LY5        |                       | LY0           | LY1           |  LY2          |  LY3          |  LY4       |  LY5       |
// | BT_PRV | BT_SEL 1  | BT_SEL 2    | BT_SEL 3   | BT_SEL 4   | BT_SEL 5   |                       |               |               |               |               |            |            |
// | BT_NXT |           |             |            |            |            |                       | RGB_BRI       | RGB_HUI       | RGB_SAI       | RGB_SPI       |            |            |
// | BT_CLR |           |             |            |            |            |   MUTE  |  | EXTPWR   | RGB_BRD       | RGB_HUD       | RGB_SAD       | RGB_SPD       |            | ZMK_STUDIO |
//                      |             |            |            |            | RGB_EFD |  | RGB_EFF  | RGB_TOG       | K_BLUE        | K_GOLD        | K_WHITE       |

            bindings = <
&to BASE    &to LOWER    &to RAISE    &to ADJUST   &trans       &trans                                &to BASE        &to LOWER       &to RAISE       &to ADJUST      &trans       &trans
&bt BT_PRV  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &none           &none           &none           &none           &none        &none
&bt BT_NXT  &none        &none        &none        &none        &none                                 &rgb_ug RGB_BRI &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &none        &none
&bt BT_CLR  &none        &none        &none        &none        &none         &kp C_MUTE   EXTPWR_T   &rgb_ug RGB_BRD &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &none        &studio_unlock 
                         &none        &none        &none        &none         LED_EFR      LED_EFF    &rgb_ug RGB_TOG &rgb_ug K_BLUE  &rgb_ug K_GOLD  &rgb_ug K_WHITE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

    };
};
